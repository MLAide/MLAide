# https://saeidfarahi.medium.com/get-started-with-spring-boot-mongodb-and-docker-compose-cfae8283ed1b
version: "3.8"

services:
  minio1:
    image: minio/minio:RELEASE.2020-10-09T22-55-05Z
    volumes:
      - $DATA_PATH/minio/data1-1:/data1
      - $DATA_PATH/minio/data1-2:/data2
    expose:
      - "9000"
    environment:
      - MINIO_ACCESS_KEY=$MINIO_ACCESS_KEY
      - MINIO_SECRET_KEY=$MINIO_SECRET_KEY
    command: server http://minio{1...4}/data{1...2}
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3

  minio2:
    image: minio/minio:RELEASE.2020-10-09T22-55-05Z
    volumes:
      - $DATA_PATH/minio/data2-1:/data1
      - $DATA_PATH/minio/data2-2:/data2
    expose:
      - "9000"
    environment:
      - MINIO_ACCESS_KEY=$MINIO_ACCESS_KEY
      - MINIO_SECRET_KEY=$MINIO_SECRET_KEY
    command: server http://minio{1...4}/data{1...2}
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3

  minio3:
    image: minio/minio:RELEASE.2020-10-09T22-55-05Z
    volumes:
      - $DATA_PATH/minio/data3-1:/data1
      - $DATA_PATH/minio/data3-2:/data2
    expose:
      - "9000"
    environment:
      - MINIO_ACCESS_KEY=$MINIO_ACCESS_KEY
      - MINIO_SECRET_KEY=$MINIO_SECRET_KEY
    command: server http://minio{1...4}/data{1...2}
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3

  minio4:
    image: minio/minio:RELEASE.2020-10-09T22-55-05Z
    volumes:
      - $DATA_PATH/minio/data4-1:/data1
      - $DATA_PATH/minio/data4-2:/data2
    expose:
      - "9000"
    environment:
      - MINIO_ACCESS_KEY=$MINIO_ACCESS_KEY
      - MINIO_SECRET_KEY=$MINIO_SECRET_KEY
    command: server http://minio{1...4}/data{1...2}
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3

  minio-nginx:
    image: nginx:1.19.2-alpine
    hostname: minio-nginx
    volumes:
      - ./minio/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - $MINIO_PORT:9000
    depends_on:
      - minio1
      - minio2
      - minio3
      - minio4

  mongo:
    image: mongo:4.4
    container_name: mongo
    hostname: mongo
    restart: unless-stopped
    ports:
      - $MONGO_PORT:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_ROOT_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_ROOT_PASSWORD
      - MONGO_INITDB_DATABASE=$MONGO_DB
      - MONGO_DB_USERNAME=$MONGO_DB_USERNAME
      - MONGO_DB_PASSWORD=$MONGO_DB_PASSWORD
    volumes:
      - $DATA_PATH/mongodb/data:/data/db/
      - $DATA_PATH/mongodb/log:/var/log/mongodb/
      - $MONGO_INITDB_SCRIPTS_HOST_PATH:/docker-entrypoint-initdb.d/
    command: ["--bind_ip", "0.0.0.0"]

  keycloack:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloack
    hostname: keycloack.mlaide
    restart: unless-stopped
    ports:
      - $KEYCLOACK_PORT:$KEYCLOACK_PORT
    command: -Djboss.http.port=$KEYCLOACK_PORT
    environment:
      - KEYCLOAK_USER=$KEYCLOACK_ADMIN_USER
      - KEYCLOAK_PASSWORD=$KEYCLOACK_ADMIN_PASSWORD
      - KEYCLOAK_IMPORT=/tmp/mlaide.json
    volumes:
      - $KEYCLOACK_CONFIGURATION:/tmp/mlaide.json

  webserver:
    image: mlaide/webserver
    container_name: mlaide-webserver
    restart: on-failure
    depends_on:
      - mongo
      - minio-nginx
      - keycloack
    ports:
      - $SERVER_PORT:8080
    environment:
      - SERVER_PORT=8080
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_APPLICATION_NAME=$APP_NAME
      - SPRING_DATA_MONGODB_AUTHENTICATION_DATABASE=$MONGO_DB
      - SPRING_DATA_MONGODB_AUTO_INDEX_CREATION=$MONGO_AUTO_INDEX_CREATION
      - SPRING_DATA_MONGODB_HOST=mongo
      - SPRING_DATA_MONGODB_PORT=27017
      - SPRING_DATA_MONGODB_USERNAME=$MONGO_DB_USERNAME
      - SPRING_DATA_MONGODB_PASSWORD=$MONGO_DB_PASSWORD
      - SPRING_DATA_MONGODB_DATABASE=$MONGO_DB
      - LOGGING_LEVEL_ROOT=$MLAIDE_SERVER_LOG_LEVEL
      - spring.security.oauth2.resourceserver.jwt.jwk-set-uri=$MLAIDE_SERVER_AUTH_JWK_SET_URI
      - mvc.security.audience=$MLAIDE_SERVER_AUTH_AUDIENCE
      - mvc.user-info.uri=$MLAIDE_SERVER_AUTH_USER_INFO_ENDPOINT
      - mvc.user-info.nickname-property=$MLAIDE_SERVER_AUTH_USER_INFO_NICKNAME_PROPERTY
      - mvc.object-storage.endpoint=http://minio-nginx:9000
      - mvc.object-storage.credentials.access-key=$MINIO_ACCESS_KEY
      - mvc.object-storage.credentials.secret-key=$MINIO_SECRET_KEY
      - mvc.cors.allowed-origins=http://localhost:$UI_PORT

  web-ui:
    image: mlaide/web-ui
    container_name: mlaide-web-ui
    restart: on-failure
    ports:
      - $UI_PORT:80
    environment:
      - API_URL=http://localhost:$SERVER_PORT
      - API_VERSION=v1
      - AUTH_ALLOWED_URLS=http://localhost:$SERVER_PORT
      - AUTH_CLIEND_ID=$MLAIDE_UI_AUTH_CLIENT_ID
      - AUTH_ISSUER=$MLAIDE_UI_AUTH_ISSUER
      - AUTH_SCOPE=$MLAIDE_UI_AUTH_SCOPES
      - AUTH_DISABLE_SECURITY=true

## By default this config uses default local driver,
## For custom volumes replace with volume driver configuration.
volumes:
  data1-1:
  data1-2:
  data2-1:
  data2-2:
  data3-1:
  data3-2:
  data4-1:
  data4-2: