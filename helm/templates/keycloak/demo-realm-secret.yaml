apiVersion: v1
kind: Secret
metadata:
  name: demo-realm-secret
data:
  demo-realm.json: {
  "id": "23f5ff64-4976-445e-8c6b-5e309f24de72",
  "realm": "mlaide-demo",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": true,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "91f9479e-cbee-45d6-baa8-a0b68a5661cd",
        "name": "default-roles-mlaide-demo",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": [
            "offline_access",
            "uma_authorization"
          ],
          "client": {
            "account": [
              "view-profile",
              "manage-account"
            ]
          }
        },
        "clientRole": false,
        "containerId": "23f5ff64-4976-445e-8c6b-5e309f24de72",
        "attributes": {}
      },
      {
        "id": "cf5085fa-35fd-428a-b5ce-105a37ce4c52",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "23f5ff64-4976-445e-8c6b-5e309f24de72",
        "attributes": {}
      },
      {
        "id": "e92a2bd5-ef42-4dfa-9ac6-a5315b01ab65",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "23f5ff64-4976-445e-8c6b-5e309f24de72",
        "attributes": {}
      }
    ],
    "client": {
      "realm-management": [
        {
          "id": "ccf6b0bb-ef98-44dc-a9e9-1228aecd6f6c",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "0a5b2ac3-a284-4ea6-9ce8-08eedd135188",
          "attributes": {}
        },
        {
          "id": "ba9c1ff9-ce86-45ec-b101-691fc91d65e0",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "0a5b2ac3-a284-4ea6-9ce8-08eedd135188",
          "attributes": {}
        },
        {
          "id": "b4ca2f52-0811-4782-8660-4fbe5c01e730",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "0a5b2ac3-a284-4ea6-9ce8-08eedd135188",
          "attributes": {}
        },
        {
          "id": "78384b72-55eb-4456-ad14-52bfd266096a",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "0a5b2ac3-a284-4ea6-9ce8-08eedd135188",
          "attributes": {}
        },
        {
          "id": "9dcdb8f4-4988-426b-8117-cb832b892041",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "0a5b2ac3-a284-4ea6-9ce8-08eedd135188",
          "attributes": {}
        },
        {
          "id": "3cb22a99-298f-4a14-93bc-5dc72e1c323a",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "0a5b2ac3-a284-4ea6-9ce8-08eedd135188",
          "attributes": {}
        },
        {
          "id": "92b38ad6-0ca2-450e-b36b-081a613ffc93",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "0a5b2ac3-a284-4ea6-9ce8-08eedd135188",
          "attributes": {}
        },
        {
          "id": "fc8d389b-f82d-43f1-af9f-f09ddcbf47eb",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "0a5b2ac3-a284-4ea6-9ce8-08eedd135188",
          "attributes": {}
        },
        {
          "id": "9bcf2cfc-db4d-4a13-823c-42f7c9144b13",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "0a5b2ac3-a284-4ea6-9ce8-08eedd135188",
          "attributes": {}
        },
        {
          "id": "e3720aeb-4cdd-492a-8699-97529ee1fd3a",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "0a5b2ac3-a284-4ea6-9ce8-08eedd135188",
          "attributes": {}
        },
        {
          "id": "f10534c3-fdb5-4de2-b66b-6d83d8f7ca63",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "0a5b2ac3-a284-4ea6-9ce8-08eedd135188",
          "attributes": {}
        },
        {
          "id": "fc72317a-43e6-47f3-8222-050b340a3b73",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-groups",
                "query-users"
              ]
            }
          },
          "clientRole": true,
          "containerId": "0a5b2ac3-a284-4ea6-9ce8-08eedd135188",
          "attributes": {}
        },
        {
          "id": "d2f538a0-e677-49f7-b4fd-d7d75aaa0816",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "0a5b2ac3-a284-4ea6-9ce8-08eedd135188",
          "attributes": {}
        },
        {
          "id": "bdfe6a40-8b5f-438f-814d-c8feba600054",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "0a5b2ac3-a284-4ea6-9ce8-08eedd135188",
          "attributes": {}
        },
        {
          "id": "8b97e87a-228e-46ed-92c2-6bbbf712d2eb",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "create-client",
                "view-events",
                "manage-realm",
                "manage-events",
                "view-clients",
                "view-authorization",
                "manage-users",
                "manage-authorization",
                "query-clients",
                "query-groups",
                "view-users",
                "manage-identity-providers",
                "impersonation",
                "view-realm",
                "manage-clients",
                "query-users",
                "view-identity-providers",
                "query-realms"
              ]
            }
          },
          "clientRole": true,
          "containerId": "0a5b2ac3-a284-4ea6-9ce8-08eedd135188",
          "attributes": {}
        },
        {
          "id": "8f00a059-5ade-4a3d-9198-0ee3febd9de8",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "0a5b2ac3-a284-4ea6-9ce8-08eedd135188",
          "attributes": {}
        },
        {
          "id": "ed27e503-c5ab-4f2a-9a35-f55ba8d5872f",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "0a5b2ac3-a284-4ea6-9ce8-08eedd135188",
          "attributes": {}
        },
        {
          "id": "94eb6636-6637-4fd3-9879-2c1483c84641",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "0a5b2ac3-a284-4ea6-9ce8-08eedd135188",
          "attributes": {}
        },
        {
          "id": "b4ec9ffc-58c0-493f-b6a9-d7125912964a",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "0a5b2ac3-a284-4ea6-9ce8-08eedd135188",
          "attributes": {}
        }
      ],
      "security-admin-console": [],
      "mlaide-k8s-demo": [],
      "admin-cli": [],
      "account-console": [],
      "broker": [
        {
          "id": "c10beb2b-10c0-4e96-904b-f6f97270391d",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "45123b1e-17d3-4f58-935e-7fc12c08332e",
          "attributes": {}
        }
      ],
      "account": [
        {
          "id": "2411d14d-b4b9-4546-a9be-a2f8b57e7494",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "9f4cf92f-12c3-4a78-a8ce-2520601fbbdc",
          "attributes": {}
        },
        {
          "id": "15df9c82-ea60-45c2-87cf-3d4a7ff23011",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "view-consent"
              ]
            }
          },
          "clientRole": true,
          "containerId": "9f4cf92f-12c3-4a78-a8ce-2520601fbbdc",
          "attributes": {}
        },
        {
          "id": "f2cdf944-17a1-46c1-adf9-19a47e86bd2c",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "9f4cf92f-12c3-4a78-a8ce-2520601fbbdc",
          "attributes": {}
        },
        {
          "id": "8b2ee4d7-2e8b-427b-bf7a-e44245e31db0",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "9f4cf92f-12c3-4a78-a8ce-2520601fbbdc",
          "attributes": {}
        },
        {
          "id": "656c03fb-e0e3-4593-8f65-eb041d631753",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "9f4cf92f-12c3-4a78-a8ce-2520601fbbdc",
          "attributes": {}
        },
        {
          "id": "414e33a3-328f-4b21-ba4a-44bf26533d61",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "9f4cf92f-12c3-4a78-a8ce-2520601fbbdc",
          "attributes": {}
        },
        {
          "id": "301d71fd-21a8-4b37-905d-0c0cab35d63d",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "clientRole": true,
          "containerId": "9f4cf92f-12c3-4a78-a8ce-2520601fbbdc",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [],
  "defaultRole": {
    "id": "91f9479e-cbee-45d6-baa8-a0b68a5661cd",
    "name": "default-roles-mlaide-demo",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "23f5ff64-4976-445e-8c6b-5e309f24de72"
  },
  "requiredCredentials": [
    "password"
  ],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpSupportedApplications": [
    "FreeOTP",
    "Google Authenticator"
  ],
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "users": [
    {
      "id": "0813890d-3fc6-45f7-a312-a00ddf51dd97",
      "createdTimestamp": 1678021564554,
      "username": "adam",
      "enabled": true,
      "totp": false,
      "emailVerified": true,
      "firstName": "Adam",
      "lastName": "Example",
      "email": "adam@example.com",
      "credentials": [
        {
          "id": "3256b809-c4a5-4499-85ec-125345de7634",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1678021583384,
          "secretData": "{\"value\":\"yUzLOxG+5mLIs5/a8yQY5iTBv0TyxLUQhUi9J0A27OfJFsBjJKGt5pKCBjL68BZi+EJ9Pa5eh/7pP9vSsnXKfA==\",\"salt\":\"+wcYeS8HErRiDsAxEVJX2w==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-mlaide-demo"
      ],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "2697ea96-5b7e-4ead-8177-8c6a148eadd2",
      "createdTimestamp": 1678023263220,
      "username": "bob",
      "enabled": true,
      "totp": false,
      "emailVerified": true,
      "firstName": "Bob",
      "lastName": "Example",
      "email": "bob@example.com",
      "credentials": [
        {
          "id": "66762731-e607-4a39-b4d6-3ff8a81bb42a",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1678023272926,
          "secretData": "{\"value\":\"54oNrn65quo8b2knTquNU/ofCvfprEw90uw5Z6zjiV4IwkWg/15vERhFQ/p1ZN1GXOyk2UjlD0/L6z29XkaA/w==\",\"salt\":\"11K14jgIca9PvuI5vAFAUQ==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-mlaide-demo"
      ],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "6e165882-2de3-4ea9-8893-2973d80253cd",
      "createdTimestamp": 1678023448162,
      "username": "foo",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "firstName": "Foo",
      "lastName": "Example",
      "email": "foo@example.com",
      "credentials": [
        {
          "id": "891f9c4a-7685-4d2b-acfa-04b2d07a1d27",
          "type": "password",
          "createdDate": 1678023448273,
          "secretData": "{\"value\":\"MKTAY+qIuuCABZzUtg9Xsb7XQOEuBMiafAsSXvgkTN+tNRegWg1Q+UsB6XupJc2xMCy03HfkcG8cZCISmoyOrA==\",\"salt\":\"vv1/zrcCfbbdsfd8mIXDww==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-mlaide-demo"
      ],
      "notBefore": 0,
      "groups": []
    }
  ],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account"
        ]
      }
    ]
  },
  "clients": [
    {
      "id": "9f4cf92f-12c3-4a78-a8ce-2520601fbbdc",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/mlaide-demo/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/mlaide-demo/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "f08c43f8-29bd-4405-9e79-deb4bd51e76b",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/mlaide-demo/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/mlaide-demo/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "33fe4f45-5bd9-45b6-ab81-e44aeaebe755",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "be892ca6-4645-443d-9d33-6aa590a79669",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "45123b1e-17d3-4f58-935e-7fc12c08332e",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "c10a4921-35df-4108-9d97-45a9d2a33bff",
      "clientId": "mlaide-k8s-demo",
      "name": "MLAide K8s Demo",
      "description": "",
      "rootUrl": "",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "https://k8s-demo.mlaide.com/*"
      ],
      "webOrigins": [
        "https://k8s-demo.mlaide.com"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "backchannel.logout.session.required": "true",
        "post.logout.redirect.uris": "https://k8s-demo.mlaide.com/*",
        "display.on.consent.screen": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "0a5b2ac3-a284-4ea6-9ce8-08eedd135188",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "c3f262aa-0b1a-4bcd-ab52-43d4779f3ae3",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/mlaide-demo/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/admin/mlaide-demo/console/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "8e17557f-1c93-4684-9f92-f9f7a230b727",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "6af3ab7d-669f-4ea4-8853-041cf09dc412",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "ec836b56-7cac-4a2b-ac1b-95e71b2b1972",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "c46bd2d4-a4a4-4aa2-b83f-ac07b13aa860",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "054c2846-2498-405f-ba52-b1236309ede6",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "c06cf216-1c31-49e1-ba17-f1f39720e4eb",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "53b2488b-f08d-4747-9cf8-527746a8df8e",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "de9c426d-e687-499e-81ae-b34e8c837136",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "dc69a107-46c8-42a2-93b2-eae88c3d4dee",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "d8fec450-3d23-46be-bb8e-e698bc2489b8",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "633cef4e-7216-4f61-b9d8-ed1cd801df32",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "aed3dca2-e9ff-4987-9907-59b00896b48c",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "52f56634-7c30-4b3d-b5fa-18c9172bfbcd",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "7492358b-3578-4622-8943-1939d59604c3",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "f35f54ac-1cb4-4616-a3ea-77d3162a4f4a",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "long"
          }
        },
        {
          "id": "9d798ed4-cd87-461a-a6ce-aac886960852",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "54a46488-6a08-4b23-8c87-bd0de58a084e",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "584c77cf-5c20-4168-8627-5e2989593cf7",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "f6a88b46-df73-43cb-bc3f-eab466f7dad8",
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "ca0ba24f-390b-42f4-a53b-f0a74494821e",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "7dbc060e-abed-4b37-a8f2-03fa1d0251f2",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "5c66c352-9959-4e35-aef7-7bf00d749f13",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "bda862cc-a145-4884-a5dd-35f2d05d2adf",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "5b850c6d-5834-4ebf-bd27-fd55708cdf44",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "05381b91-9eac-4ddd-9e26-65b65db40bac",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        },
        {
          "id": "4c1e0ac8-578e-416c-a454-491b2ef7c988",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        }
      ]
    },
    {
      "id": "ed9bb73f-7ee0-45e8-bb87-de1293739e23",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${addressScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "2dada3d5-31b3-4243-a494-4e17d9a499d6",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "4c6255b4-fc13-4dbe-92f5-edac3b2a2032",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${phoneScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "22d1030a-eb8c-40e4-98a4-aed04619f3bd",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        },
        {
          "id": "439d223c-46d5-4102-82e0-0d2e12d75fd7",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "9094412d-8a8d-4818-83f0-0af2d3bc887b",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "394a6515-9d98-41d1-aac7-0bdfd95b408a",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        },
        {
          "id": "382487db-f1de-4b51-9192-ded7e6e4c546",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "fd3d5a01-bd74-45ad-8f57-69f92cac8c97",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "b7175343-8df4-412f-bf71-4ff324e79db3",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "id": "56092c01-c550-4423-b322-16060fe74abb",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "56f6cc9b-7e81-4f23-8ad0-babcf7ce7cf6",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "profile",
    "email",
    "roles",
    "web-origins",
    "acr"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "loginTheme": "keycloak",
  "accountTheme": "",
  "adminTheme": "",
  "emailTheme": "",
  "eventsEnabled": false,
  "eventsListeners": [
    "jboss-logging"
  ],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "fcac968b-41f3-4b82-9a46-2fd73132cefa",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": [
            "200"
          ]
        }
      },
      {
        "id": "d7afa10d-b948-42c5-9f14-4cb6052c86bd",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "8381269c-85ee-454f-9899-16cbbe6c7768",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "7015fd98-b210-453b-9aa2-8b84a0f46815",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-usermodel-attribute-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-user-attribute-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-address-mapper",
            "oidc-full-name-mapper",
            "saml-user-property-mapper",
            "saml-role-list-mapper"
          ]
        }
      },
      {
        "id": "0331e1d2-0caa-4c3e-a0ca-1dc606eef8a3",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-user-attribute-mapper",
            "oidc-full-name-mapper",
            "saml-role-list-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-user-property-mapper",
            "oidc-address-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-usermodel-property-mapper"
          ]
        }
      },
      {
        "id": "e578e786-215c-4d29-b1b3-8644917c8ae6",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "a1dd1cc6-0a2a-44ff-a84f-9e7ac64192ec",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "c76a270d-b7b0-49e1-b546-6debff989d3e",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": [
            "true"
          ],
          "client-uris-must-match": [
            "true"
          ]
        }
      }
    ],
    "org.keycloak.userprofile.UserProfileProvider": [
      {
        "id": "fa0f411c-98e1-4d51-90f7-af163a74d46c",
        "providerId": "declarative-user-profile",
        "subComponents": {},
        "config": {}
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "6d64c77f-ade5-43f8-99a8-c4ec87319f8a",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEpAIBAAKCAQEAqvTA0nhAsvIXNWaHNACws8BEaozC10ntlvKoHKmypGtDCLuDooKWDFMChMw+9un+yQW1ghiA2+sixCgV8oyGGWKRHXKzkS5577i5U4wacq7MTjyM6vksMUfaP96F4mPx1WwB4u8cvpEWNLhW6ZCAfuxy25jhtIW5BMl6IcNnxOnbniVNhRvLumzs+c9mljjXzO9O322EC7AJHbnIYqtP1hjNW8XVC+Vy9SAKkhf56VJe44aKNfSixUybpzT/PST/PPGj4CEzSenGHaLlflBbOMIxX/zFNFGdZ8oAlx4gW5Ced/6vER37U1szuNJb7JWZebUCmefAhNsS/YsBCuvlgQIDAQABAoIBAAdKIXC4DPY0aXXu9cPrZZ18jM5IS0SX0+g0V6PFPqdRJY4ZRM8op1JGNdzIwsSPjLwwoKE3/0KhX52iofDyOgOaFtr9GZgOtcdZhpl/517NgkuxvEaGsnI1gKJpkCbroRO7I8dz77NWh25fD+GstjXzSiB//9vNOerw1mLbLLESP9Gy7npMjwiS3SUFehdvBCfVGAprR1KGX6vad81hcD6soCY2elIsDyz90xR8xS8toWGeipKf5KlZYeJSEOpijO7g/Mt6X/210nbs6iuBGbnlufzrqI023aaIMYc0bQJaUsy3L3jbWcY+u34bi2MfRJnv7REMEtItOUAFINK7CrMCgYEA49V91iLnf61E0ldmhLn9oJyBVK77ovzAbftXAEqtgVv0066ohHs7J0vnxa3I0jf3aKo2acb8pol0+G6sFuUswOa3rza1y4DI0e81dTPyryG/NFKX1LbUklzLVYvyQG3MpLVkW+1Mmzd7pCciD2xzj3BGn08FsYqsY7hoLjq8hnsCgYEAwBcvfSJCGXirLQMu1oJOxA0XdvV3K5mRRuzfrPIW2ZjjFjoiWZ7gISZnHszHjwgr3pyfq8z2T2RgBXPPYPNi++1Xh4NuqQyGHpLLse93KgGIp+OECwXDgKHAOz6o2t1iCDsRw9w99x3jVz6YqhA4DPMTgwmNp0DmaYid6fUR4TMCgYB/9NxKkqnfnCmF1M5gBrE6Lgu4ytnKzRcp7boMEOTnPQUAihxc43Tyef/+lr6tyf7qyoXq3HXy9ko6aLW/2hBLeoh5IEnztC2VMjqcy4Ml9tcTBLv/HHvAg9sy/Xkd1EzVyIZH1rtqhTusksnfTbKNQap4OIJjFxYAn4XrSNOu1wKBgQCn1JodTs1Jy/BjR6Cosvl2uamCuj0Azw/rVBKp3Gqye64NQYW5n+JblF4MvwaspYsO2PF4/X9HJn/uw5yxLHWTf282a1NISDT2iXOHZ55KCUUIyvQXXVXPEYQPP1PwxfRdFJ8U7V0GiAqVs49XJwyR499sYfBt7XpjQoYWX5TbmQKBgQCjBRqzYQpEp/mpUrisIkGccc+qR+igd4960QwMs8KYvlum/hQc0hgzFmspM+7j2c9rE1fAjubFXiQ6I0v60+YqWrRrE05xdN5iqp6o7arhcRRUvnDhrsmBtktdrwYuQpkSsGqN/lBdHs+jRPlDCaMDXeIvXsluazRCL4hmv5sTew=="
          ],
          "keyUse": [
            "ENC"
          ],
          "certificate": [
            "MIICpTCCAY0CBgGGsdvjojANBgkqhkiG9w0BAQsFADAWMRQwEgYDVQQDDAttbGFpZGUtZGVtbzAeFw0yMzAzMDUxMjU4NDNaFw0zMzAzMDUxMzAwMjNaMBYxFDASBgNVBAMMC21sYWlkZS1kZW1vMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqvTA0nhAsvIXNWaHNACws8BEaozC10ntlvKoHKmypGtDCLuDooKWDFMChMw+9un+yQW1ghiA2+sixCgV8oyGGWKRHXKzkS5577i5U4wacq7MTjyM6vksMUfaP96F4mPx1WwB4u8cvpEWNLhW6ZCAfuxy25jhtIW5BMl6IcNnxOnbniVNhRvLumzs+c9mljjXzO9O322EC7AJHbnIYqtP1hjNW8XVC+Vy9SAKkhf56VJe44aKNfSixUybpzT/PST/PPGj4CEzSenGHaLlflBbOMIxX/zFNFGdZ8oAlx4gW5Ced/6vER37U1szuNJb7JWZebUCmefAhNsS/YsBCuvlgQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQAyMH6ollDdYe/1pcBLY22QeX6DN0dmI4S5oPFCZauftYsFllhP/l+sDj6CNiCxpCA4xHoHS/AHEaB2e1X17H31NUTEIbXWZ5F/iSnANkMV6p1ePVAg/fDIvrAVUfJfPfp7PeMucYejHuxbXSXzhgrb8PZIuLPQyaqMmcAVXxUzty2hJ4TSXBBG1MFkfyaxF74R0mM1p9OBXQR1JYwdEJRhiAdk7o0fFROXOWyFiAF3L5fSz/gGUHu3bW0pp3o7JM6r0yXDr7Qvguvib0rsc5pQus5R32e+oTHaPuqWKiHl7eHHjaJBSKxsEGSyzzoDjy9m8jnkb+y8xCoZonBUSsoN"
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "RSA-OAEP"
          ]
        }
      },
      {
        "id": "2584585c-0cfa-49f6-af7b-ff73df3c2f39",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "c3f7d1f1-1940-4424-be84-3b7e88d10881"
          ],
          "secret": [
            "kRRVba143ejJvoX0XanePg"
          ],
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "a77df756-ec9a-435f-8234-c95b39a3f79c",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEowIBAAKCAQEAuzykDFJFijyphCRniJ1qcRVIMMfEGNMJX8WRyMWXlxIMXanhsA/R4vILzWMOCU4TGCqVq+g8g3TY94fFK2Pt70m3IOCSzkk/WAJoFtw0PlMoiF6x95zlfcPtptHo4Zwei43V+AMhO5qO4rDZQnO3PwVtcnpKRASyXQnS1aR7VpM3Y6X4VngqMsD/7z5Ul6+PWoIs2FzzOitSvhnzR5FbHUXL4tGwMRUZbe61ETXQeWk5lbz3Lq3ZSFZGeiYM6g3wS+hZPS36zfcUl01qbHs8VHwUcPp80O7vvFcYjgtk+HVA1aHMgIUWgh3J1+gwZ8VjR7JeP4YuV5toAP3m+4hYdwIDAQABAoIBACu5cxPfiJbKKMoPmE/6dtd2oVem5v/nFIrVgABzSD3CvLmIyQgNAbYuURxDFA2POn1LwI0XHD6UpHBVt/E0kmVtgQL//riGuXCrizQ/c0HUuKPz/Tp2XM9cWFy7K1e4Vhe/5SZYUMPzCYgdxXazwCjK8y6nKT2uHRsGBsLWeOkT69oVctSRNuWSPafRJlkZxFSLl/iSRpjF5avLR424lYc11iCF96mPDyBSLPyqkKlIkqpvMIyNPpDEa6jRwHJ2F7/59ZIjJCxDBSrgchS7utlEgo3QO2lapcjpT5cHHssx3GfcI9R96eFlrrJMqmj8qAQsAWLzbwyolWyych+H+pUCgYEA+Z+A+nLrUZENTsxDZux4LPlGYMqkXxFhEPgDIsxFk6h+xNWLFb5uNAs5eOH1IBfxFKR4NcbGLGMDezogrmfD8QECw77pVW7qi7VtYMu6/+GnfTr3gM9T/gxAgmUG8RdxGGvYm1La6Rr1cFGwqu2D1RI6YUzBx9GOATmutqbS4IsCgYEAwAUkGSmCs6sXhh0SBpisJAHwxpblWJW9/zR/STwOj+aIS5XNBOx/MO+A2VjEvFOQrw7cep7/yRj10Ur8sRQoOL+/tocUbMbYhd+IDcGsS8mQFnlIhglzA6BuGCp+hY3jZ43qatWiYFTw1LP3wzTWZKuC86PxlrikKVfzZtyU2UUCgYBDrhyBSzFET0jFaZqIyGqY/wk26xp/8C1aNXRcNfhTXabpZWCth5FHqRdvEAyvI+6ogyNYqUlH9ZyXB56eyuGUcYq3WgbXtBgBwzIhwXs1L5CC4r8CfLQwOFAxSoUETy/JyEvVaTSTaUzMpEl7PqS025lakj4kGEwhRut4+GhKmwKBgQCmMgzrZl1EypnCr1iRswSS6ccO6z237WsT/skIht2HuR1QZmibkWII5dLcy5MD+UPp8G/uBb4XvO3N5xxM28hwTa5N+h44g+aWAEHOvkk1E1EN0o1tzbHpeqqvaeA2Efe4AkHZk+xFel8zikywfQPu/++IluYb8NXNHt2Bsvt2DQKBgHFEv5bIeC4Yx7JbiP5b4C3RChHF3a65KnwPDBDC/mf3AKMHATM6KORq/U9rJoA/5hr+Jd3RaklWlWCdM+C12gafO46UWweHacMyRU+rhUUIY7hYS9S70LvSI0teRxqQeKMmCShmBl9vFesjPtLg2StWUKied6xgWoipwsjlahXr"
          ],
          "keyUse": [
            "SIG"
          ],
          "certificate": [
            "MIICpTCCAY0CBgGGsdvgKDANBgkqhkiG9w0BAQsFADAWMRQwEgYDVQQDDAttbGFpZGUtZGVtbzAeFw0yMzAzMDUxMjU4NDJaFw0zMzAzMDUxMzAwMjJaMBYxFDASBgNVBAMMC21sYWlkZS1kZW1vMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAuzykDFJFijyphCRniJ1qcRVIMMfEGNMJX8WRyMWXlxIMXanhsA/R4vILzWMOCU4TGCqVq+g8g3TY94fFK2Pt70m3IOCSzkk/WAJoFtw0PlMoiF6x95zlfcPtptHo4Zwei43V+AMhO5qO4rDZQnO3PwVtcnpKRASyXQnS1aR7VpM3Y6X4VngqMsD/7z5Ul6+PWoIs2FzzOitSvhnzR5FbHUXL4tGwMRUZbe61ETXQeWk5lbz3Lq3ZSFZGeiYM6g3wS+hZPS36zfcUl01qbHs8VHwUcPp80O7vvFcYjgtk+HVA1aHMgIUWgh3J1+gwZ8VjR7JeP4YuV5toAP3m+4hYdwIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQA7j45BNUnkz5ksp300BLiVr78WcduxboPFsVbrrXJtKDaBWKxM59hCq5BqnRWSuK/pWNtHTNrw/8CaevGsGwCrlUuJ+jOkygi79JOzTto/Ol/nPLzBJNnRmudFTQsRjmzYMGPfR11Msv8u6f83wIqi3wEKJKGbUzTasBnP9GDYLh+aqRiEq50IA+5eZpfSs8J7n+WFD8Ct09htMrZ82eBafvUR7iuefQEJ64qd+g5w95EDSt1SJqXTvk9yRi+cBDx3XP/3dfg+Pp23nmROYoD4kPqr/b8tXcSoq0s2eKCt4yaElYJ8kaCiVLtQ1jf8upyypja3F7HPqNzCQ8TsLfId"
          ],
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "f8cc4ea8-a68b-415e-a2e7-a38b3e731702",
        "name": "hmac-generated",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "54b9fd71-5fdf-4163-a733-962cbb69c653"
          ],
          "secret": [
            "9hoNqY044z1GRT9deUZfWzTgrAuFH8edX2lCo-Ap55WfGovVaykpgkvdRBgBayyAZ2GS5N1yZVe-EVfX2d2eGg"
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "HS256"
          ]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "id": "e9b8b2de-5ad8-44b8-b53b-aed523ab1d7b",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "1bf5f2db-7fc4-4df0-ad9a-477f245a15f4",
      "alias": "Authentication Options",
      "description": "Authentication options.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "basic-auth",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "basic-auth-otp",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "448af616-455d-4f37-8efd-44ccdb479b41",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "e820a1b2-6efa-4762-82a4-9f6a3cefdc7f",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "f24b60f4-0244-4fc0-8a49-5333e46ffc42",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "ef2d2cce-f87c-4a42-bca7-1fb1b326310e",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "6f8e4020-c6ff-404e-b2d9-6d8f01eff423",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "24042c4e-c175-47a1-8c14-980f988e7498",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "3c3b0b27-d617-4ddd-8e6e-41a24d92f48f",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "7f8be76b-c63d-43c6-8bc2-48bc9ab56861",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "727b56ae-f246-4cde-a9d5-355f450d4c7e",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "f67ab8af-7b97-41f0-b04f-6901679e9abf",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "aab8e189-a87d-4fc8-ae25-9c5dc9b30d27",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "a1740e10-870b-40c2-8bf9-8e480b69f265",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "5ede590e-6e4e-43d6-9485-734f39db6056",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "1d30fbc3-706f-4ee3-9ba4-53458fd7550c",
      "alias": "http challenge",
      "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "no-cookie-redirect",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Authentication Options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "b1fcb3e0-388b-40e9-b3d8-7f046223c73e",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "f8272adf-b20d-4871-b63c-2e6f0fc1fcdd",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-profile-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "a48a1e24-feed-40c3-a657-bc06b36d7685",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "b893fd07-ab4c-46a8-ad11-0122c5748ee6",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "5578706f-ac4a-493a-af75-cb4887ffe26d",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "1178e8f8-3fbe-478e-9dcf-1c18d50b2d87",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "terms_and_conditions",
      "name": "Terms and Conditions",
      "providerId": "terms_and_conditions",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "webauthn-register",
      "name": "Webauthn Register",
      "providerId": "webauthn-register",
      "enabled": true,
      "defaultAction": false,
      "priority": 70,
      "config": {}
    },
    {
      "alias": "webauthn-register-passwordless",
      "name": "Webauthn Register Passwordless",
      "providerId": "webauthn-register-passwordless",
      "enabled": true,
      "defaultAction": false,
      "priority": 80,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaAuthRequestedUserHint": "login_hint",
    "oauth2DeviceCodeLifespan": "600",
    "oauth2DevicePollingInterval": "5",
    "clientOfflineSessionMaxLifespan": "0",
    "clientSessionIdleTimeout": "0",
    "parRequestUriLifespan": "60",
    "clientSessionMaxLifespan": "0",
    "clientOfflineSessionIdleTimeout": "0",
    "cibaInterval": "5"
  },
  "keycloakVersion": "19.0.3",
  "userManagedAccessAllowed": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}